过滤文本内容 

# grep [选项] "pattern" 文件名称 

pattern：条件、模式

	由普通字符、正则表达式组成的条件 
	
	[root@node01 ~]# grep "root" /etc/passwd


正则表达式： 
	
	由一些具有特殊含义的字符[元字符]组成的条件，通过该条件可以表示具有相同特殊一类文本
	
元字符： 

1、匹配任意单个字符的元字符

	.	任意单个字符	l.t   lat  l1t   lkt   lbk   l?t 

		[root@node01 ~]# grep "r..t" /etc/passwd 
		
		[root@node01 ~]# grep "r\.t" /tmp/test.txt

		[root@node01 ~]# grep "r\[t" /tmp/test.txt

		
	[abc]	或者 
	
		[root@node01 ~]# grep "r[kc]t" /etc/passwd 
	
		-	连续的字符
			[a-z]	[A-Z]	[a-zA-Z]	[0-9]	[a-zA-Z0-9]
		
			[root@node01 ~]# grep "r[0-9]t" /tmp/test.txt

			[root@node01 ~]# grep "r[a-zA-Z0-9]t" /tmp/test.txt

		^	取反
			
			[^a-z]
			
			[root@node01 ~]# grep "r[^a-z]t" /tmp/test.txt

			[root@node01 ~]# grep "r[^a-zA-Z]t" /tmp/test.txt

			[root@node01 ~]# grep "r[^a-zA-Z0-9]t" /tmp/test.txt


	[[:space:]]	任意单个空白字符  

		[root@node01 ~]# grep "[[:space:]]" /tmp/test.txt



2、匹配字符出现的位置  

	^string		以string开头 
	
		[root@node01 ~]# grep "^root" /etc/passwd

		[root@node01 ~]# grep "^[rbg]" /etc/passwd

		[root@node01 ~]# grep "^[^rbg]" /etc/passwd

		[root@node01 ~]# ls -l /etc/ | grep "^d" | wc -l

	string$		以string结束 
	
		[root@node01 ~]# grep "nologin$" /etc/passwd
		
		[root@node01 ~]# grep "^r[0-9]t$" /tmp/test.txt


	^$	空行 
	
	

3、匹配字符出现的次数 

	*	表示前一个字符出现任意次(0或者更多)
	
		ab* 	a 	ab   abbb   abab
		
		.*
	
	+	表示前一个字符至少出现一次 
	
		[root@node01 ~]# grep "r[0-9]\+t" /tmp/test.txt

	?	表示前一个字符出现0次或者1次，可有可无 
	
		[root@node01 ~]# grep "r[0-9]\?t" /tmp/test.txt

	{n}	表示前一个字符精确出现n次   {2}
	
		[root@node01 ~]# grep "r[0-9]\{3\}t" /tmp/test.txt

		{2,5}	至少2次最多5次 
		
			[root@node01 ~]# grep "r[0-9]\{2,4\}t" /tmp/test.txt

		{2,}	至少2次 
		
			[root@node01 ~]# grep "r[0-9]\{2,\}t" /tmp/test.txt


4、分组 

	\(....\)	
		ab\?
		\(ab\)\?
			
			
示例：

	[root@node01 ~]# grep "[0-9]\+@qq\.com" /tmp/mail_list

	[root@node01 ~]# grep ".\+@[0-9a-zA-Z]\+\.[a-zA-Z]\+" /tmp/mail_list   

	[root@node01 ~]# grep ".\+@[0-9a-zA-Z]\+\.[a-zA-Z]\+\(\.[a-z]\+\)\?" /tmp/mail_list   

	[root@node01 ~]# ifconfig lo | head -n 2 | tail -n 1 | grep "[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}"

		
	
常用选项：

1) -o  只显示被正则表达式匹配的文本

	[root@node01 ~]# grep -o "r[0-9]\+t" /tmp/test.txt

2) -i  忽略大小写 

	[root@node01 ~]# grep -i "error" /tmp/test.txt

3) -e  根据多个条件过滤 	或者的关系  

	[root@node01 ~]# grep -e "^#" -e "0$" /etc/fstab

4) -E  支持扩展正则表达式 

	+ ? {} () 
	| 或者 
	
	[root@node01 ~]# grep -E ".+@[0-9a-zA-Z]+\.[a-z]+" /tmp/mail_list

	[root@node01 ~]# grep -E "xfs|swap" /etc/fstab

	
定义别名，方便应用

	[root@node01 ~]# tail -n 1 /etc/bashrc 
		alias grep="grep -i -E --color"

	[root@node01 ~]# source /etc/bashrc
	
	
	
	

	
	
文件目录压缩、解压缩 	


1、文件压缩   gzip/bzip2/xz 


1) gzip 	*.gz 

	a. 压缩
	
		[root@node01 ~]# gzip /opt/data/file01
		[root@node01 ~]# ls /opt/data/
		file01.gz
		[root@node01 ~]# file /opt/data/file01.gz 
		/opt/data/file01.gz: gzip compressed data, was "file01", from Unix, last modified: Wed Dec  5 15:15:48 2018

	b. 解压缩 
	
		[root@node01 data]# gzip -d /opt/data/file01.gz 

		[root@node01 ~]# gunzip /opt/data/file01.gz 

	
2) bzip2 	*.bz2 

	[root@node01 ~]# yum install -y bzip2

	a. 压缩
	
		[root@node01 ~]# bzip2 /opt/data/file02 
		[root@node01 ~]# ls /opt/data/
		file01  file02.bz2
		[root@node01 ~]# file /opt/data/file02.bz2 
		/opt/data/file02.bz2: bzip2 compressed data, block size = 900k


	b. 解压缩 
	
		[root@node01 ~]# bzip2 -d /opt/data/file02.bz2 

		[root@node01 ~]# bunzip2 /opt/data/file02.bz2 

	
3) xz 

	a. 压缩
		
		[root@node01 ~]# xz /opt/data/file03
		[root@node01 ~]# ls /opt/data/
		file01  file02  file03.xz
		[root@node01 ~]# file /opt/data/file03.xz 
		/opt/data/file03.xz: XZ compressed data
		[root@node01 ~]# 

		
	b. 解压缩 
	
		[root@node01 ~]# xz -d /opt/data/file03.xz 
		[root@node01 ~]# ls /opt/data/
		file01  file02  file03

	
压缩工具对比

[root@node01 ~]# dd if=/dev/zero of=/opt/data/file04 bs=1M count=1000

		if=源文件 
		of=目的文件
		bs=1M
		count=1000 
		
	
	

目录归档压缩 

1、归档 

	a. 创建归档文件

	# tar cf 归档文件名称 源文件 
	
		c: 创建归档文件
		f：指定归档文件名称
		
	示例01：将/opt/data下所有文件打包存放到/backup目录下 
	
		[root@node01 ~]# tar cf /backup/data_$(date +%F_%T).tar /opt/data/

		tvf选项：不解包查看文件
		
			[root@node01 ~]# tar tvf /backup/data_01.tar 

	b. 解归档文件
	
	# tar xf 归档文件名称 [-C 目录名称]
	
		x：解归档 
		
		[root@node01 ~]# tar xf /backup/data_01.tar 

		[root@node01 ~]# tar xf /backup/data_01.tar -C /tmp/


	
2、调用gzip压缩归档 

	# tar czf 归档文件名称 源文件 

		z：调用gzip压缩 
	
		[root@node01 ~]# tar czf /backup/data_$(date +%F_%T).tar.gz /opt/data/

	
3、调用bzip2压缩归档 

	# tar cjf 归档文件名称 源文件 
	
		j: 调用bzip2 
		
		[root@node01 ~]# tar cjf /backup/data_$(date +%F_%T).tar.bz2 /opt/data/

		
4、调用xz压缩归档 

	# tar cJf 归档文件名称 源文件 

		J：调用xz
		
		[root@node01 ~]# tar cJf /backup/data_$(date +%F_%T).tar.xz /opt/data/

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	







